if (${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})
    message(FATAL_ERROR "in-source build is not supported. Please build from another directory.")
endif()

cmake_minimum_required(VERSION 2.8.7)
project(smpp_codec_c)
find_package(CUDA QUIET REQUIRED)

set(smpp_codec_c_VERSION_MAJOR 0)
set(smpp_codec_c_VERSION_MINOR 1)
set(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS} -lm")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lm -pthread -fPIC")
if (DEFINED ENV{LIBRARY_OUTPUT_PATH})
    message(STATUS "LIBRARY_OUTPUT_PATH DEFINED=$ENV{LIBRARY_OUTPUT_PATH}")
else()
    set(ENV{LIBRARY_OUTPUT_PATH} ${CMAKE_SOURCE_DIR}/lib)
    message(STATUS "LIBRARY_OUTPUT_PATH="$ENV{LIBRARY_OUTPUT_PATH})
endif ()

set(LIBRARAY_NAME "SMPPDecoder")
set(JAVA_INCLUDE_PATH $ENV{JAVA_HOME}/include)
set(JAVA_INCLUDE_PATH2 ${JAVA_INCLUDE_PATH}/linux)
message(STATUS "JAVA_INCLUDE_PATH=${JAVA_INCLUDE_PATH}")

include_directories(src/common)
include_directories(src/decoder)
include_directories(src/util)
include_directories(${JAVA_INCLUDE_PATH})
include_directories(${JAVA_INCLUDE_PATH2})

add_subdirectory(src/common)
add_subdirectory(src/decoder)
add_subdirectory(src/util)
add_subdirectory(src/cuda-decoder)

message (STATUS "JNI_INCLUDE_DIRS=${JNI_INCLUDE_DIRS}")
message (STATUS "JAVA_HOME=$ENV{JAVA_HOME}")
message (STATUS "JNI_LIBRARIES=${JNI_LIBRARIES}")
message (STATUS "JAVA_INCLUDE_PATH=${JAVA_INCLUDE_PATH}")
message (STATUS "LIBRARY_OUTPUT_PATH="$ENV{LIBRARY_OUTPUT_PATH})

#link_libraries(${LIBRARAY_NAME} ${JNI_LIBRARIES})

cuda_add_library(${LIBRARAY_NAME} SHARED ${SOURCE_FILES})
set(LIBRARY_OUTPUT_PATH_REAL $ENV{LIBRARY_OUTPUT_PATH})
message(STATUS "LIBRARY_OUTPUT_PATH="${LIBRARY_OUTPUT_PATH_REAL})
install(TARGETS ${LIBRARAY_NAME} DESTINATION ${LIBRARY_OUTPUT_PATH_REAL})